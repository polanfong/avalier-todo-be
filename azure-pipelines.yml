
trigger:
- master

resources:
- repo: self

variables:
  vmImageName: 'ubuntu-latest'
  dockerId: 'avalier.azurecr.io'
  dockerImageName: 'avalier-todo-be'
  trivyCachePath: '$(Pipeline.Workspace)/.cache/trivy'

stages:
- stage: CI
  displayName: Build and push
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:

    - script: |
        docker build -t '$(dockerId)/$(dockerImageName):latest' ./src
      displayName: Docker - Build

    - script: |
        docker tag '$(dockerId)/$(dockerImageName):latest' '$(dockerId)/$(dockerImageName):$(Build.BuildNumber)'
        #docker tag '$(dockerId)/$(dockerImageName):latest' '$(dockerId)/$(dockerImageName):$(Build.SourceVersion)'
      displayName: Docker - Tag

    - script: |
        docker create --name test-stage $(docker images --filter "label=test=true" -q | head -1)
        docker cp test-stage:/test ./test
        docker rm test-stage
      displayName: 'Docker - Extract Test Results'

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'VSTest'
        testResultsFiles: '**/test*.xml'
        searchFolder: '$(System.DefaultWorkingDirectory)/test'
        publishRunAttachments: true
      displayName: 'Testing - Publish Results'

    #- task: PublishCodeCoverageResults@1
    #  inputs:
    #    codeCoverageTool: 'cobertura'
    #    summaryFileLocation: '$(System.DefaultWorkingDirectory)/test/coverage/coverage.cobertura.xml'
    #    reportDirectory: '$(System.DefaultWorkingDirectory)/test/coverage/reports'
    #  displayName: 'Coverage - Publish Results'

    #- script: |
    #    sudo apt-get -y install rpm
    #    wget https://github.com/aquasecurity/trivy/releases/download/v0.1.6/trivy_0.1.6_Linux-64bit.deb
    #    sudo dpkg -i trivy_0.1.6_Linux-64bit.deb
    #  displayName: Docker - Trivy Installation (Container Security Analysis by Aquasec)

    #- script: |
    #    trivy --only-update alpine '$(dockerId)/$(dockerImageName):$(Build.BuildNumber)'
    #  displayName: Docker - Trivy Execution (Container Security Analysis by Aquasec)

    - script: |
        docker image list | grep $(dockerId)
      displayName: Docker - List

    - task: Docker@2
      displayName: Docker - Login
      inputs:
        command: login
        containerRegistry: dockerRegistryServiceConnection

    - task: Docker@2
      displayName: Docker - Push
      inputs:
        command: push
        containerRegistry: dockerRegistryServiceConnection
        repository: '$(dockerImageName)'
        tags: |
          latest
          $(Build.BuildNumber)
